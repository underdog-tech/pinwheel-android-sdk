plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
}

def libraryGroupId = 'com.underdog_tech.pinwheel'
def libraryArtifactId = 'pinwheel-android'
def libraryVersion = '2.3.1'

afterEvaluate {
    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/underdog-tech/pinwheel-android-sdk")
                credentials {
                    username = System.getenv("GPR_USER")
                    password = System.getenv("GPR_API_KEY")
                }
            }
        }

        publications {
            maven(MavenPublication) {
                groupId = libraryGroupId
                artifactId = libraryArtifactId
                version = libraryVersion
                artifact("$buildDir/outputs/aar/${libraryArtifactId}-release.aar")

                pom {
                    withXml {
                        def dependenciesNode = asNode().appendNode('dependencies')

                        project.configurations.implementation.allDependencies.each {
                            if (it.group != null || it.name != null || it.version != null || it.name == "unspecified") return

                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
            }
        }
    }
}

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 6
        versionName libraryVersion
        buildConfigField "String", "LIBRARY_VERSION", "\"${libraryVersion}\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.4.30"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'com.google.code.gson:gson:2.8.6'

    testImplementation "androidx.fragment:fragment-testing:1.2.5"
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'androidx.test:core:1.3.0'
    testImplementation 'org.mockito:mockito-core:2.18.3'
    testImplementation "org.robolectric:robolectric:4.4"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}
